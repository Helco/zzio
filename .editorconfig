
root = true

[*.{cs,vb}]

tab_width = 4
indent_size = 4
end_of_line = crlf
indent_style = space

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_prefer_collection_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_compound_assignment = true:suggestion
dotnet_style_prefer_simplified_interpolation = true:suggestion

dotnet_code_quality.ca1711.allowed_suffixes = Flag|Flags|Ex|Collection|Attribute

#
# Disabled rules
#
# Rule: Use an EntityCommandRecorder or change constructor to use buffer
# Reason: DEA analyzer is too strict, whether or not this is dangerous is more complicated
dotnet_diagnostic.DEA0005.severity = none
dotnet_diagnostic.DEA0022.severity = none

# Rule: Do not declare static members on generic types
# Reason: Generally yes but enough exceptions to leave this to human review
dotnet_diagnostic.ca1000.severity = none

# Rule: Types that own disposable fields should be disposable
# Reason: Window is based on "Tags" which are disposed by the TagContainer of the window
dotnet_diagnostic.ca1001.severity = none

# Rule: Do not declare visible instance fields
# Reason: Inevitable in ECS components or pure math structs
dotnet_diagnostic.ca1051.severity = none

# Rule: Specify CultureInfo / IFormatProvider / StringComparison
# Reason: We fix the culture info to Invariant
dotnet_diagnostic.ca1304.severity = none
dotnet_diagnostic.ca1305.severity = none
dotnet_diagnostic.ca1310.severity = none

# Rule: Identifiers should have correct suffix
# Reason: Too complicated for this static analyzer
dotnet_diagnostic.ca1710.severity = none

# Rule: Parameter names should match base declaration
# Reason: Generally yes, but more specified names for specialized types are more readable
dotnet_diagnostic.ca1725.severity = none

# Rule: Do not ignore method results
# Reason: For easier use some objects like most Window types are self-registering
dotnet_diagnostic.ca1806.severity = none

# Rule: Call GC.SuppressFinalize correctly
# Reason: I rather just not introduce finalizers
dotnet_diagnostic.ca1816.severity = none

# Rule: Use property instead of Linq Enumerable method (Count, First, Last)
# Reason: Except for Count() these methods are expressing intent more clearly, especially Last
dotnet_diagnostic.ca1826.severity = none

# Rule: Use concrete types when possible for improved performance
# Reason: Using interface types strategically can increase communicated intent on how to use values
dotnet_diagnostic.ca1859.severity = none

# Rule: Avoid using 'Enumerable.Any()' extension method
# Reason: Is more readable. And simple enough to solve in optimization if it becomes a problem
dotnet_diagnostic.ca1860.severity = none

# Rule: Prevent behavioral change caused by built-in operators of IntPtr/UIntPtr
# Reason: Good. Unintended overflow should throw
dotnet_diagnostic.ca2020.severity = none

[*.cs]
csharp_indent_labels = flush_left
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = block_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
